name: Android
on:
  workflow_dispatch: {}

jobs:
  Push-artifact:
   runs-on: windows-latest
   steps:
      - name: Checkout code 
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate build number
        uses: onyxmueller/build-tag-number@v1
        with:
         token: ${{secrets.github_token}} 

      - name: Manual QA
        run: |
            echo "Manual QA build"
            echo "BUILD_NUMBER=${{ env.BUILD_NUMBER }}" >> $env:GITHUB_ENV

      - name: Version Name
        run: |
          VERSION_NAME="24.04.001"
          "VERSION_NAME=$VERSION_NAME" >> $env:GITHUB_ENV
        
      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            const refName = 'tags/v.${{ env.VERSION_NAME }}.${{ env.BUILD_NUMBER }}_QA'
            const tagListData = await github.rest.git.listMatchingRefs({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: refName
            })
            const tagList = tagListData.data
            console.log(tagList)
            if (tagList.length > 0)
            {
              console.log("Tag already exists.")
              return
            }
            else
            {
              console.log("Creating a new tag.")
              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/' + refName,
                sha: context.sha
              })
            }
          outputs: qa_tag

      - name: Save Tag
        run: echo "${{ steps.create_qa_tag.outputs.qa_tag }}" >>  $env:GITHUB_ENV
        
        
  updateConfluence:
    name: Geneate Change log 
    needs: Push-artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      # - name: Download QA Tag
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: QA Tag
      #     path: qa_tag.txt

      - name: Set BuildNumber
        run: |
          echo "BUILD_NUMBER=$(git rev-list --count ${{ github.sha }})" >> $GITHUB_ENV
          echo "${{ env.BUILD_NUMBER }}"

      - name: Version Name
        run: |
          VERSION_NAME="24.04.001"
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      - name: Current Tag
        run: echo "CURRENT_QA_TAG=v.{{ env.VERSION_NAME }}.${{ env.BUILD_NUMBER }}_QA" >> $GITHUB_ENV
        
      - name: prev Tag
        run:  echo "PREVIOUS_QA_TAG=$(git tag --list "*QA" --sort -V | grep -B1 "${{ env.CURRENT_QA_TAG }}" | head -n 1)" >> $GITHUB_ENV
      - name: Change Log
        id: Changelog
        run: |
          git log --pretty=format:"%h %s" ${{ env.PREVIOUS_QA_TAG }}..${{ env.CURRENT_QA_TAG }} > changelog.txt

      - name: Print Change Log
        run: |
          cat changelog.txt
 
         
         
