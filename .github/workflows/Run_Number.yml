run-name: test, runnumber - ${{ github.event.inputs.environment }}
'on': 
 workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'development'

jobs:
    deploy:
     runs-on: ubuntu-latest
        
     steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Previous Run Number
        id: get_previous_run
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GIT_ACCESSTOKEN_CICD }}
          script: |
            const { owner, repo } = context.repo;
            const environment = '${{ github.event.inputs.environment }}';
            const dynamicWorkflowName = `Generate env file and deploy portal, EB - ${environment}`;
 
            // Get the list of runs for the repository
            const runs = await github.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: dynamicWorkflowName,
              per_page: 5, // Adjust this based on how far back you need to look
              status: 'completed' // Only consider completed runs
            });
 
            // Filter runs based on dynamic name and event type
            const envRuns = runs.data.workflow_runs.filter(run =>
              run.name === dynamicWorkflowName &&
              (run.event === 'workflow_dispatch' || run.event === 'schedule')
            );
 
            // If there are more than one matching run, get the previous one
            if (envRuns.length > 1) {
              const previousRunNumber = envRuns[1].run_number; // Second most recent run
              console.log(`Found previous run number: ${previousRunNumber}`);
              return previousRunNumber;
            } else {
              throw new Error('No previous run found for the specified environment.');
            }
            
      - name: Echo Previous Run Number
        run: echo "The previous run number for ${{ github.event.inputs.environment }} is ${{ steps.get_previous_run.outputs.result }}"
