name: Push artifact to Confluence
on:
  workflow_dispatch: {}

jobs:
  Push-artifact:
   runs-on: ubuntu-latest
   steps:
      - name: Checkout code 
        uses: actions/checkout@v4
        
      - name : Tag
        run: |
          echo "TAG=$(date +'%m_%d')" >> $GITHUB_ENV
          echo "TAG: ${{ env.TAG }}" >> ./docs/commits.md

      - run: echo "The Tag is:${{ env.TAG }}"

      - name: Test
        id: run_test
        run: |
         echo "test" >> ./docs/commits.md
         exit 0
      
      - name: Determine step Status
        if: always()
        id: checkStatus
        run: |
          if [ "${{ steps.run_test.output }}" == 'success' ]; then
           echo "STASTUS=Pass" >> $GITHUB_ENV
          else
           echo "STASTUS=FAIL" >> $GITHUB_ENV
          fi
        shell: bash
        
      - name: Upload Test Results
        if: always()
        run: |
          echo "Test Result" > ./docs/commits.md
          echo "status: ${{ env.STASTUS }}" >> ./docs/commits.md

      - name: get commits 
        run: |
         echo "Latest commits:" >> ./docs/commits.md
         REPO_COMMITS=$(git log --format=%B --since='yesterday' | sort | uniq) 
         echo "Commits: $REPO_COMMITS" >> ./docs/commits.md 

      - name: save
        run: |
          echo "# **evironment-8-27-Pass**" >> ./docs/commits.md
          echo "## Tag" >> ./docs/commits.md
          echo " The TAG used for deployment: evironment-8-27-Pass" >> ./docs/commits.md
          echo "## Jira Items" >> ./docs/commits.md
          echo "###  Repo commit"s >> ./docs/commits.md
          git log --format=%B --since='yesterday' | sort | uniq | while read line; do
             echo "- $line" >> ./docs/commits.md
          done
          
      - name: Update .md File  
        run: |
             git config --global user.email "neelimamaddela95@gmail.com"
             git config --global user.name "Neelima"
             git add ./docs/commits.md
             git commit -m "update commits.md with latest commit"
             git push origin main

      - name: save tag for QA Reference 
        if: ${{ success() }}
        run: echo "$(date +'%m_%d')" > Tag1.txt
            
      - name: Upload TAG 
        uses: actions/upload-artifact@v4.3.3 
        with:
            name: Tag6
            path: Tag1.txt  

      - name: Download Android Artifact
        uses: actions/download-artifact@v4
        with:
          name:  Tag6
          # path: Tag.txt

      - name: Get Artifact URL
        run: |
          artifact_name=Tag6
          
          artifact_list=$(curl -s -H "Authorization: token ${{ secrets.GIT_ACCESSTOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")

          artifact_id=$(echo "$artifact_list" | jq -r --arg artifact_name "$artifact_name" \
          '.artifacts[] | select(.name == $artifact_name ) | .id')
                  
          echo "Artifact ID: $artifact_id"
          echo "ARTIFACT_ID=$artifact_id" >> $GITHUB_ENV

      - name: Artifact Url
        run: |
         arifact_id="${{ env.ARTIFACT_ID }}"
         artifact_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${arifact_id}"

          echo "Artifact Url: $artifact_url"
          echo "ARTIFACT_URL=$artifact_url" >> $GITHUB_ENV

      # - name: Upload Artifact to Confluence
      #   run: |
      #     ATTACHMENT_FILE_NAME="Tag1.txt"
      #     CONFLUENCE_PAGE_ID="1867778"
      #     CONFLUENCE_BASE_URL="https://neelimasudhakar.atlassian.net/wiki"
      #     AUTH_API_TOKEN="${{ secrets.AUTH_API_TOKEN }}"
      #     USER_NAME="neelimasudhakar95@gmail.com"
       
      #     # Upload the attachment
      #     ATTACHMENT_TITLE=$(curl -u $USER_NAME:$AUTH_API_TOKEN \
      #     -X POST \
      #     -H "X-Atlassian-Token: nocheck" \
      #     -F "file=@${ATTACHMENT_FILE_NAME}" \
      #     -F "comment=File attached via GitHub Actions" \
      #     "${CONFLUENCE_BASE_URL}/rest/api/content/${CONFLUENCE_PAGE_ID}/child/attachment" 2>/dev/null \
      #     | jq -r '.results[].title')

      - name: Upload Artifact to Confluence
        run: |
          ATTACHMENT_FILE_NAME="Tag1.txt" 
          CONFLUENCE_PAGE_ID="1867778"
          CONFLUENCE_BASE_URL="https://neelimasudhakar.atlassian.net/wiki"
          AUTH_API_TOKEN="${{ secrets.AUTH_API_TOKEN }}"
          USER_NAME="neelimasudhakar95@gmail.com"
           
          # Upload the file as an attachment
          RESPONSE=$(curl -u $USER_NAME:$AUTH_API_TOKEN \
          -X POST \
          -H "X-Atlassian-Token: nocheck" \
          -F "file=@${ATTACHMENT_FILE_NAME}" \
          -F "comment=File attached via GitHub Actions" \
          "${CONFLUENCE_BASE_URL}/rest/api/content/${CONFLUENCE_PAGE_ID}/child/attachment")

          echo " Response: $RESPONSE"
             
          ATTACHMENT_TITLE=$(echo $RESPONSE | jq -r '.results[0].title')
          
          # Check if the title was extracted
          if [ -z "$ATTACHMENT_TITLE" ]; then
            echo "Error: Unable to extract attachment title."
            exit 1
          else
            ATTACHMENT_LINK="${CONFLUENCE_BASE_URL}/download/attachments/${CONFLUENCE_PAGE_ID}/${ATTACHMENT_TITLE}"
            echo "Attachment URL: ${ATTACHMENT_LINK}"
            echo "ATTACHMENT_LINK=$ATTACHMENT_LINK" >> $GITHUB_ENV
          fi
                

          
      - name: Print
        run: |
          echo "Attachment URL: ${ATTACHMENT_LINK}"
          echo "ATTACHMENT_LINK=$ATTACHMENT_LINK" >> $GITHUB_ENV

      - name: Save Test results to .md file
        run: |
          echo "## Automation Test Results:" >> ./docs/commits.md
          echo "Automation Result Attachment Url: [Download Here](${{ env.ATTACHMENT_LINK }})" >> ./docs/commits.md
          



          
           
          # # Now embed the attachment link into the page
          # PAGE_UPDATE=$(curl -u $USER_NAME:$AUTH_API_TOKEN \
          #   -X PUT \
          #   -H 'Content-Type: application/json' \
          #   -d '{
          #     "version": {
          #       "number": 2
          #      },
          #      "title": "Back-end 24.03",
          #      "type": "page",
          #      "body": {
          #        "storage": {
          #          "value": "<p>Here is the artifact link: <a href=\"'${ATTACHMENT_LINK}'\">Download Artifact</a></p>",
          #           "representation": "storage"
          #         }
          #       }
          #     }' \
          #     "${CONFLUENCE_BASE_URL}/rest/api/content/${CONFLUENCE_PAGE_ID}")
           
          #  echo "Page updated with artifact link."

          
            
      - uses: cupcakearmy/confluence-markdown-sync@v1
        with:
          from: './docs/commits.md'
          to: '1867778' # The confluence page id where to write the output
          cloud: neelimasudhakar
          user: neelimasudhakar95@gmail.com
          token: ${{ secrets.AUTH_API_TOKEN }}
