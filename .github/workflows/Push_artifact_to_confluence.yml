name: Push artifact to Confluence
on:
  workflow_dispatch: {}

jobs:
  Push-artifact:
   runs-on: ubuntu-latest
   steps:
      - name: Checkout code 
        uses: actions/checkout@v4
        
      - name : Tag
        run: |
          echo "TAG=$(date +'%m_%d')" >> $GITHUB_ENV
          echo "TAG: ${{ env.TAG }}" >> ./docs/commits.md

      - run: echo "The Tag is:${{ env.TAG }}"

      - name: Test
        id: run_test
        run: |
         echo "test" >> ./docs/commits.md
         exit 0
      
      - name: Determine step Status
        if: always()
        id: checkStatus
        run: |
          if [ "${{ steps.run_test.output }}" == 'success' ]; then
           echo "STASTUS=Pass" >> $GITHUB_ENV
          else
           echo "STASTUS=FAIL" >> $GITHUB_ENV
          fi
        shell: bash
        
      - name: Upload Test Results
        if: always()
        run: |
          echo "Test Result" > ./docs/commits.md
          echo "status: ${{ env.STASTUS }}" >> ./docs/commits.md

      - name: get commits 
        run: |
         echo "Latest commits:" >> ./docs/commits.md
         REPO_COMMITS=$(git log --format=%B --since='yesterday' | sort | uniq) 
         echo "Commits: $REPO_COMMITS" >> ./docs/commits.md 

      - name: save
        run: |
          echo "# **evironment-8-27-Pass**" >> ./docs/commits.md
          echo "## Tag" >> ./docs/commits.md
          echo " The TAG used for deployment: evironment-8-27-Pass" >> ./docs/commits.md
          echo "## Jira Items" >> ./docs/commits.md
          echo "###  Repo commit"s >> ./docs/commits.md
          git log --format=%B --since='yesterday' | sort | uniq | while read line; do
             echo "- $line" >> ./docs/commits.md
          done
          
      - name: Update .md File  
        run: |
             git config --global user.email "neelimamaddela95@gmail.com"
             git config --global user.name "Neelima"
             git add ./docs/commits.md
             git commit -m "update commits.md with latest commit"
             git push origin main

      - name: save tag for QA Reference 
        if: ${{ success() }}
        run: echo "$(date +'%m_%d')" > Tag.txt
            
      - name: Upload TAG 
        uses: actions/upload-artifact@v4.3.3 
        with:
            name: Tag1
            path: Tag.txt  

      - name: Get Artifact URL
        run: |
          artifact_name="Tag"
          
          artifact_list=$(curl -s -H "Authorization: token ${{ secrets.GIT_ACCESSTOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")

          artifact_id=$(echo "$artifact_list" | jq -r --arg artifact_name "$artifact_name" \
          '.artifacts[] | select(.name == $artifact_name ) | .id')
                  
          echo "Artifact ID: $artifact_id"
          echo "ARTIFACT_ID=$artifact_id" >> $GITHUB_ENV

      # - name: Artifact Url
      #   run: |
      #    arifact_id="${{ env.ARTIFACT_ID }}"
      #    artifact_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${arifact_id}"

      #     echo "Artifact Url: $artifact_url"
      #     echo "ARTIFACT_URL=$artifact_url" >> $GITHUB_ENV

      - name: Download Artifact
        run: |
          arifact_id="${{ env.ARTIFACT_ID }}"
          curl -H "Authorization: token ${{ secrets.GIT_ACCESSTOKEN_CICD }}" \
          -L -o Tag1.zip \
          "https://github.com/${{ github.repository }}/actions/artifacts/${arifact_id}/zip"

          
      - name: Upload Artifact to Confluence
        run: |
         ATTACHMENT_FILE_NAME="Tag1.zip"
          ATTACHMENT_TITLE=$(curl -u neelimasudhakar95@gmail.com:${{ secrets.AUTH_API_TOKEN }} \
            -X POST \
            -H "X-Atlassian-Token: nocheck" \
            -F "file=@{ATTACHMENT_FILE_NAME}" \
            -F "comment=File attached via GitHub Actions" \
            https://neelimasudhakar.atlassian.net/wiki/rest/api/content/1867778/child/attachment 2>/dev/null \
            | jq -r '.results[].title')

            if [ "${ATTACHMENT_TITLE}" = "${ATTACHMENT_FILE_NAME}" ]; then
            echo "File ${ATTACHMENT_TITLE} uploaded to page 1867778"
            echo >modified-page-data.json
 
            MACRO_UUID=$(uuidgen 2>/dev/null)
 
            REST_CONTENT_FULL_OUTPUT=$(curl -u ${USER_NAME}:${USER_PASSWORD} \
              ${CONFLUENCE_BASE_URL}'/rest/api/content/1867778?expand=body.storage,version,space' 2>/dev/null)
 
            # Update page with the ZIP file attachment link
            echo ${REST_CONTENT_FULL_OUTPUT} | \
            jq '{body: {storage: {value: (.body.storage.value + "<p><a href=\"/wiki/download/attachments/1867778/'${ATTACHMENT_FILE_NAME}'\">Download ZIP File</a></p>"), representation: .body.storage.representation}}, id: .id, type: .type, title: .title, space: {key: .space.key}, version: {number: (.version.number + 1)}}' \
            > modified-page-data.json
 
            MODIFIED_PAGE_ID=$(curl -u neelimasudhakar95@gmail.com:${{ secrets.AUTH_API_TOKEN }} \
              -X PUT \
              -H 'Content-Type: application/json' \
              --data @modified-page-data.json \
              https://neelimasudhakar.atlassian.net/wiki/rest/api/content/1867778 2>/dev/null \
              | jq -r '.id')
 
            if [ "${MODIFIED_PAGE_ID}" -eq "1867778" ]; then
              echo "Page 1867778 successfully updated."
            else
              echo "Failed to update page 1867778."
            fi
          else
            echo "Failed to upload file to page 1867778"
          fi
        
 

      # - name: Get Page Content
      #   id: get_page_content
      #   run: |
      #     response=$(curl -u ${{ secrets.CONFLUENCE_USER }}:${{ secrets.CONFLUENCE_API_TOKEN }} \
      #       -X GET \
      #       "https://neelimasudhakar.atlassian.net/wiki/rest/api/content/1867778?expand=body.storage")
      #     echo "::set-output name=content::$response"
      #     echo "::set-output name=version_number::$(echo "$response" | jq -r '.version.number')"
 
      # - name: Update Page with Attachment Link
      #   run: |
      #     version_number=${{ steps.get_page_content.outputs.version_number }}
      #     new_version=$((version_number + 1))
      #     content_url="https://neelimasudhakar.atlassian.net/wiki/download/attachments/1867778/Tag.zip?api=v2"
      #     updated_content=$(cat <<EOF
      #     {
      #       "id": "1867778",
      #       "type": "page",
      #       "title": "Back-end 24.03",
      #       "body": {
      #         "storage": {
      #           "value": "</p>Back-end 24.03</p><p>N<p><p>ch by title</p><p.Owned by NeelimaMaddela</p><p>Last updated: 3 minutes ago 1 min read 1 person viewed</p><p>Getting started in</p><p>-07-24 M</p><p>DRAFT</p><p>Test Result</p><p>ntitled whiteboard</p><p>ses</p><p>status: FAIL</p><p>My Deployments</p><p>4.03</p><p>Latest commits.md</p><p><a herf=\"$content_url\">Download Tag.zip</a></p>",
      #           "representation": "storage"
      #         }
      #       },

      #       "version": {
      #         "number": $new_version
      #       }
      #     }
      #     EOF
      #     )
      #              curl -u ${{ secrets.CONFLUENCE_USER }}:${{ secrets.CONFLUENCE_API_TOKEN }} \
      #               -X PUT \
      #               -H "Content-Type: application/json" \
      #               -d "$updated_content" \
      #               "https://neelimasudhakar.atlassian.net/wiki/rest/api/content/1867778"
            
      - uses: cupcakearmy/confluence-markdown-sync@v1
        with:
          from: './docs/commits.md'
          to: '1867778' # The confluence page id where to write the output
          cloud: neelimasudhakar
          user: neelimasudhakar95@gmail.com
          token: ${{ secrets.AUTH_API_TOKEN }}
